Web UI
======

Package for web
https://trunkrs.dev

Native GUI
==========

https://relm4.org/
https://gtk-rs.org/
https://github.com/wingtk/gvsbuild
https://www.gtk.org/docs/installations/windows
https://github.com/MGlolenstine/gtk4-cross

https://github.com/rodrigocfd/winsafe

Cross-native GUI
================

https://github.com/slint-ui/slint (GPL)

Rust GUI
========

https://github.com/linebender/xilem (React-inspired)
https://github.com/marc2332/freya (React-inspired)
https://github.com/emilk/egui (immediate mode)

Wasm in Browser
===============

Using JavaScript as the bridge!

1. JS loads puccini.wasm
2. JS exports "start_dispatch" to puccini.wasm
2. puccini.wasm exports "get_dispatch" and "end_dispatch" to JS

4. Puccini calls "start_dispatch" with a number ID for the task
5. JS calls "get_dispatch" to get information, which includes CBOR of the arguments

5. JS loads plugin.wasm
6. JS calls plugin.wasm's "dispatch"
7. JS calls "end_dispatch"

Call JavaScript from Rust WASM
https://rustwasm.github.io/book/reference/js-ffi.html

Using WASI in the browser requires transpiling it:
https://component-model.bytecodealliance.org/language-support/javascript.html

Data Model
==========

1. Types
   Purely metadata
2. NodeTemplates
   Typed (0 or more)
   Can contain:
     1. References to other NodeTemplates (recursive)
     2. References to RelationshipTemplates
3. RelationshipTemplates
   Typed (0 or more)
   Has filters for target node
4. Nodes
   Typed
   Explicit instantiation = copied over from NodeTemplates
   After they are copied, it is not required to adhere to the origin NodeTemplate anymore
   The NodeTemplate is not a schema for the Node!
   Nodes can be created without a NodeTemplate
5. Relationships
   Typed (0 or more)
   Implicit instantiation = when the NodeTemplate is instantiated, its referred RelationshipTemplates are instantiated
   Nodes instantiated by the referring NodeTemplate are the Relationship source
   The filter is used to select the Relationship target
   Copied over from RelationshipTemplate
   After they are copied, it is not required to adhere to the origin RelationshipTemplate anymore
   The RelationshipTemplate is not a schema for the Relationship!
   Relationships can be created without a RelationshipTemplate

How Instantiation Works
=======================

1. Iterate floria::NodeTemplate => 0 or more floria::Node
   Instantiation plugins
2. Recurse into child floria::NodeTemplate
3. floria::RelationshipTemplate => 0 or more floria::Relationship

How Update Works
================

1. Iterate all floria::Node, floria::Relationship
   Pre-update plugins
2. Iterate all properties that are not "evaluated"
3. Eval expression -> value
   And mark as "evaluated"
   During this phase we check for required property errors
4. Unmark all "evaluated"
5. Post-update plugins

How Events Work
===============

1. Event defined by interface Type + operation
2. Iterate all floria::Node, floria::Relationship
3. Call
